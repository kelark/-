#include"maps.h"
#include<windows.h>
maps::maps()
{
        initmap.emplace_back(points(1, 1));
        initmap.emplace_back(points(2, 1));
        initmap.emplace_back(points(3, 1));
        initmap.emplace_back(points(4, 1));
        initmap.emplace_back(points(5, 1));
        initmap.emplace_back(points(6, 1));
        initmap.emplace_back(points(7, 1));
        initmap.emplace_back(points(8, 1));
        initmap.emplace_back(points(9, 1));
        initmap.emplace_back(points(10, 1));
        initmap.emplace_back(points(11, 1));
        initmap.emplace_back(points(12, 1));
        initmap.emplace_back(points(13, 1));
        initmap.emplace_back(points(14, 1));
        initmap.emplace_back(points(15, 1));
        initmap.emplace_back(points(16, 1));
        initmap.emplace_back(points(17, 1));
        initmap.emplace_back(points(18, 1));
        initmap.emplace_back(points(19, 1));
        initmap.emplace_back(points(20, 1));
        initmap.emplace_back(points(21, 1));
        initmap.emplace_back(points(22, 1));
        initmap.emplace_back(points(23, 1));
        initmap.emplace_back(points(24, 1));
        initmap.emplace_back(points(25, 1));
        initmap.emplace_back(points(26, 1));
        initmap.emplace_back(points(27, 1));
        initmap.emplace_back(points(28, 1));
        initmap.emplace_back(points(29, 1));
        initmap.emplace_back(points(30, 1));
        initmap.emplace_back(points(1, 2));
        initmap.emplace_back(points(30, 2));
        initmap.emplace_back(points(1, 3));
        initmap.emplace_back(points(30, 3));
        initmap.emplace_back(points(1, 4));
        initmap.emplace_back(points(30, 4));
        initmap.emplace_back(points(1, 5));
        initmap.emplace_back(points(30, 5));
        initmap.emplace_back(points(1, 6));
        initmap.emplace_back(points(30, 6));
        initmap.emplace_back(points(1, 7));
        initmap.emplace_back(points(30, 7));
        initmap.emplace_back(points(1, 8));
        initmap.emplace_back(points(30, 8));
        initmap.emplace_back(points(1, 9));
        initmap.emplace_back(points(30, 9));
        initmap.emplace_back(points(1, 10));
        initmap.emplace_back(points(30, 10));
        initmap.emplace_back(points(1, 11));
        initmap.emplace_back(points(30, 11));
        initmap.emplace_back(points(1, 12));
        initmap.emplace_back(points(30, 12));
        initmap.emplace_back(points(1, 13));
        initmap.emplace_back(points(30, 13));
        initmap.emplace_back(points(1, 14));
        initmap.emplace_back(points(30, 14));
        initmap.emplace_back(points(1, 15));
        initmap.emplace_back(points(30, 15));
        initmap.emplace_back(points(1, 16));
        initmap.emplace_back(points(30, 16));
        initmap.emplace_back(points(1, 17));
        initmap.emplace_back(points(30, 17));
        initmap.emplace_back(points(1, 18));
        initmap.emplace_back(points(30, 18));
        initmap.emplace_back(points(1, 19));
        initmap.emplace_back(points(30, 19));
        initmap.emplace_back(points(1, 20));
        initmap.emplace_back(points(30, 20));
        initmap.emplace_back(points(1, 21));
        initmap.emplace_back(points(30, 21));
        initmap.emplace_back(points(1, 22));
        initmap.emplace_back(points(30, 22));
        initmap.emplace_back(points(1, 23));
        initmap.emplace_back(points(30, 23));
        initmap.emplace_back(points(1, 24));
        initmap.emplace_back(points(30, 24));
        initmap.emplace_back(points(1, 25));
        initmap.emplace_back(points(30, 25));
        initmap.emplace_back(points(1, 26));
        initmap.emplace_back(points(30, 26));
        initmap.emplace_back(points(1, 27));
        initmap.emplace_back(points(30, 27));
        initmap.emplace_back(points(1, 28));
        initmap.emplace_back(points(30, 28));
        initmap.emplace_back(points(1, 29));
        initmap.emplace_back(points(30, 29));
        initmap.emplace_back(points(1, 30));
        initmap.emplace_back(points(2, 30));
        initmap.emplace_back(points(3, 30));
        initmap.emplace_back(points(4, 30));
        initmap.emplace_back(points(5, 30));
        initmap.emplace_back(points(6, 30));
        initmap.emplace_back(points(7, 30));
        initmap.emplace_back(points(8, 30));
        initmap.emplace_back(points(9, 30));
        initmap.emplace_back(points(10, 30));
        initmap.emplace_back(points(11, 30));
        initmap.emplace_back(points(12, 30));
        initmap.emplace_back(points(13, 30));
        initmap.emplace_back(points(14, 30));
        initmap.emplace_back(points(15, 30));
        initmap.emplace_back(points(16, 30));
        initmap.emplace_back(points(17, 30));
        initmap.emplace_back(points(18, 30));
        initmap.emplace_back(points(19, 30));
        initmap.emplace_back(points(20, 30));
        initmap.emplace_back(points(21, 30));
        initmap.emplace_back(points(22, 30));
        initmap.emplace_back(points(23, 30));
        initmap.emplace_back(points(24, 30));
        initmap.emplace_back(points(25, 30));
        initmap.emplace_back(points(26, 30));
        initmap.emplace_back(points(27, 30));
        initmap.emplace_back(points(28, 30));
        initmap.emplace_back(points(29, 30));
        initmap.emplace_back(points(30, 30));
}
void maps::printinitmap()
{
    for(auto &point:initmap)
    {
        point.print();
        Sleep(10);
    }
}